services:
  # Frontend service
  - type: web
    name: frontend
    runtime: docker
    repo: https://github.com/TopV77/Quizmaster/tree/main/frontend
    rootDir: ./frontend
    dockerContext: ./frontend
    envVars:
    buildCommand: npm install && npm run build
    staticPublishPath: ./dist/browser
  # Backend service
  - type: web
    name: backend
    runtime: docker
    repo: https://github.com/TopV77/Quizmaster/tree/main/backend
    rootDir: ./backend
    buildCommand: ./mvnw clean package
    startCommand: java -jar target/backend-0.0.1-SNAPSHOT.jar
    envVars:
      - key: SPRING_DATASOURCE_URL
        value: ${SPRING_DATASOURCE_URL}
      - key: SPRING_DATASOURCE_USERNAME
        value: ${SPRING_DATASOURCE_USERNAME}
      - key: SPRING_DATASOURCE_PASSWORD
        value: ${SPRING_DATASOURCE_PASSWORD}
    autoDeploy: true
    dependsOn:
      - name: db

  # MySQL database
  - type: database
    name: mysql-db
    databaseName: ${MYSQL_DATABASE}
    user: ${MYSQL_USER}
    ipAllowList: []
    plan: starter
    envVars:
      - key: MYSQL_ROOT_PASSWORD
        value: ${MYSQL_ROOT_PASSWORD}
      - key: MYSQL_PASSWORD
        value: ${MYSQL_PASSWORD}

  # Nginx service
  - type: web
    name: nginx
    runtime: docker
    repo: https://github.com/TopV77/Quizmaster/tree/main/nginx
    rootDir: ./nginx
    dockerCommand: nginx -g "daemon off;"
    envVars:
    volumes:
      - path: ./nginx/nginx.conf
        mountPath: /etc/nginx/nginx.conf
      - path: ./frontend/dist/browser
        mountPath: /usr/share/nginx/html
    ports:
      - port: 80

volumes:
  - name: mysql-data
    mountPath: /var/lib/mysql
    sizeGB: 10
